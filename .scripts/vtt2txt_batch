#! /usr/bin/env python3

import os
import sys
import argparse


def convert_vtt_to_txt(vtt_path, output_dir):
    try:
        with open(vtt_path, 'r', encoding='utf-8') as vtt_file:
            lines = vtt_file.readlines()

        text_lines = []
        for line in lines:
            line = line.strip()
            if not line or '-->' in line or line.startswith('WEBVTT'):
                continue
            text_lines.append(line)

        base_name = os.path.splitext(os.path.basename(vtt_path))[0]
        txt_path = os.path.join(output_dir, base_name + '.txt')

        with open(txt_path, 'w', encoding='utf-8') as txt_file:
            txt_file.write('\n'.join(text_lines))


        print(f"✔ Converted: {vtt_path} → {txt_path}")
    except Exception as e:
        print(f"✖ Error processing {vtt_path}: {e}")


def find_vtt_files(input_paths):
    vtt_files = []
    for path in input_paths:
        if os.path.isdir(path):
            for root, _, files in os.walk(path):

                for file in files:
                    if file.lower().endswith('.vtt'):
                        vtt_files.append(os.path.join(root, file))
        elif os.path.isfile(path) and path.lower().endswith('.vtt'):
            vtt_files.append(path)
    return vtt_files


def main():
    parser = argparse.ArgumentParser(description='Batch convert .vtt files to .txt')
    parser.add_argument('inputs', nargs='+', help='Input .vtt files or directories')
    parser.add_argument('-o', '--output', default='.', help='Output directory for .txt files')

    args = parser.parse_args()

    os.makedirs(args.output, exist_ok=True)

    vtt_files = find_vtt_files(args.inputs)
    if not vtt_files:
        print("No .vtt files found in the specified input paths.")
        sys.exit(1)

    for vtt_file in vtt_files:
        convert_vtt_to_txt(vtt_file, args.output)


if __name__ == '__main__':
    main()

